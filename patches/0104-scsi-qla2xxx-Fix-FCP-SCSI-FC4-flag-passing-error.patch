From 8e0e063af0d1be30245a08fab0515a3cccfcd513 Mon Sep 17 00:00:00 2001
From: Quinn Tran <qutran@marvell.com>
Date: Wed, 26 Feb 2020 14:40:08 -0800
Subject: [PATCH] scsi: qla2xxx: Fix FCP-SCSI FC4 flag passing error

This patch fixes issue where incorrect flag was used for sending
switch commands.

Link: https://lore.kernel.org/r/20200226224022.24518-5-hmadhani@marvell.com
Fixes: e8c72ba51a15 ("[SCSI] qla2xxx: Use GFF_ID to check FCP-SCSI FC4 type before logging into Nx_Ports")
Fixes: a4239945b8ad ("scsi: qla2xxx: Add switch command to simplify fabric discovery")
Signed-off-by: Himanshu Madhani <hmadhani@marvell.com>
Signed-off-by: Quinn Tran <qutran@marvell.com>
Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
---
 qla2x00t-32gbit/qla_gs.c     | 4 ++--
 qla2x00t-32gbit/qla_init.c   | 4 ++--
 qla2x00t-32gbit/qla_target.c | 4 ++--
 3 files changed, 6 insertions(+), 6 deletions(-)

Index: scst-3.4.x/qla2x00t-32gbit/qla_gs.c
===================================================================
--- scst-3.4.x.orig/qla2x00t-32gbit/qla_gs.c
+++ scst-3.4.x/qla2x00t-32gbit/qla_gs.c
@@ -2893,7 +2893,7 @@ qla2x00_gff_id(scsi_qla_host_t *vha, sw_
 	for (i = 0; i < ha->max_fibre_devices; i++) {
 		/* Set default FC4 Type as UNKNOWN so the default is to
 		 * Process this port */
-		list[i].fc4_type = FC4_TYPE_UNKNOWN;
+		list[i].fc4_type = 0;
 
 		/* Do not attempt GFF_ID if we are not FWI_2 capable */
 		if (!IS_FWI2_CAPABLE(ha))
@@ -3243,7 +3243,7 @@ void qla24xx_handle_gpnid_event(scsi_qla
 			    "%s %d %8phC post new sess\n",
 			    __func__, __LINE__, ea->port_name);
 			qla24xx_post_newsess_work(vha, &ea->id,
-			    ea->port_name, NULL, NULL, FC4_TYPE_UNKNOWN);
+			    ea->port_name, NULL, NULL, 0);
 		}
 	}
 }
Index: scst-3.4.x/qla2x00t-32gbit/qla_init.c
===================================================================
--- scst-3.4.x.orig/qla2x00t-32gbit/qla_init.c
+++ scst-3.4.x/qla2x00t-32gbit/qla_init.c
@@ -1042,7 +1042,7 @@ static void qla24xx_async_gnl_sp_done(sr
 			    __func__, __LINE__, (u8 *)&wwn, id.b24);
 			wwnn = wwn_to_u64(e->node_name);
 			qla24xx_post_newsess_work(vha, &id, (u8 *)&wwn,
-			    (u8 *)&wwnn, NULL, FC4_TYPE_UNKNOWN);
+			    (u8 *)&wwnn, NULL, 0);
 		}
 	}
 
@@ -5823,7 +5823,7 @@ qla2x00_find_all_fabric_devs(scsi_qla_ho
 		/* Bypass ports whose FCP-4 type is not FCP_SCSI */
 		if (ql2xgffidenable &&
 		    (!(new_fcport->fc4_type & FS_FC4TYPE_FCP) &&
-		    new_fcport->fc4_type != FC4_TYPE_UNKNOWN))
+		    new_fcport->fc4_type != 0))
 			continue;
 
 		spin_lock_irqsave(&vha->hw->tgt.sess_lock, flags);
Index: scst-3.4.x/qla2x00t-32gbit/qla_target.c
===================================================================
--- scst-3.4.x.orig/qla2x00t-32gbit/qla_target.c
+++ scst-3.4.x/qla2x00t-32gbit/qla_target.c
@@ -4818,11 +4818,11 @@ static int qlt_handle_login(struct scsi_
 			qla24xx_post_newsess_work(vha, &port_id,
 			    iocb->u.isp24.port_name,
 			    iocb->u.isp24.u.plogi.node_name,
-			    pla, FC4_TYPE_UNKNOWN);
+			    pla, 0);
 		else
 			qla24xx_post_newsess_work(vha, &port_id,
 			    iocb->u.isp24.port_name, NULL,
-			    pla, FC4_TYPE_UNKNOWN);
+			    pla, 0);
 
 		goto out;
 	}
